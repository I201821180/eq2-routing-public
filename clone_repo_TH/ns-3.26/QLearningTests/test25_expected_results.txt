{
  "node0":{
    "q":0, //Two RREP -> both get Q'd also 2 ICMP reply
    "a":5,
    "t":1765,
  },
  "node1":{
    "q":0, //icmp req, rrep ack, icmp reply #1
    "a":4, //RREP hello, rrep to 10.1.1.4 for route to 10.1.1.1, RREQ for route to 10.1.1.1 (why? TODO)
    "t":0,
  },
  "node2":{
    "q":0, //ICMP Request 1, RREPACK from node0 to node2 for the route via node2 to node3, RREP from 10.1.1.1 to 10.1.1.3 for 10.1.1.4, ICMP REQ 1, ICMP REPLY 1, --- added 1763 pings, that all go via this node so +1763*2
    "a":3, //RREP hello, rrep to 10.1.1.4 for route to 10.1.1.1, RREQ for route to 10.1.1.1 (why? TODO) -- possibly forwarded from node3 ?? --- then RREP after that is sent back to 10.1.1.4 (node3)
    "t":0,
  },
  "node3":{
    "q":0, // for traffic it's 2, then one reply to RREP from 10.1.1.3 to get to 10.1.1.1
    "a":3, // Hello, then two RREQ's with increasing TTL
    "t":1765,
  },
}

In the script runs, node1 is chosen to route the 1763 next icmps, but in the tests it is node1 so we have to flip the values for AODV traffic (ideal so no Q traffic anyway)
